<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.oracle.labs.helidon</groupId>
	<artifactId>helidon-labs-common</artifactId>
	<version>2.0.1.0</version>
	<packaging>jar</packaging>

	<name>helidon-labs-common</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<helidon.version>2.0.1</helidon.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jboss.jandex</groupId>
					<artifactId>jandex-maven-plugin</artifactId>
					<version>[1.0.1,]</version>
					<!-- <goals> jandex </goals> -->
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.jboss.jandex
										</groupId>
										<artifactId>
											jandex-maven-plugin
										</artifactId>
										<versionRange>
											[1.0.1,]
										</versionRange>
										<goals>
											<goal>jandex</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jboss.jandex</groupId>
				<artifactId>jandex-maven-plugin</artifactId>
				<version>1.0.8</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<!-- If you want to use this in eclipse you need to disable if from 
						incremental builds (see plugin management section) -->
					<execution>
						<id>make-index</id>
						<goals>
							<goal>jandex</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>io.helidon.microprofile.rest-client</groupId>
			<artifactId>helidon-microprofile-rest-client</artifactId>
			<version>${helidon.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1.4</version>
		</dependency><!-- MP Open API spec and helidon implementation -->
		<dependency>
			<groupId>org.eclipse.microprofile.openapi</groupId>
			<artifactId>microprofile-openapi-api</artifactId>
			<version>2.0-MR1</version>
		</dependency>
		<!-- Utilities -->
		<!-- Lombok does the auto method creation -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.10</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
